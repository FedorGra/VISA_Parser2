import logging
import asyncio
import aiohttp
from bs4 import BeautifulSoup
from aiogram import Bot, Dispatcher, types
from aiogram.types import Message
from aiogram.filters import Command
from aiogram.enums import ParseMode

TOKEN = "8109609226:AAHX--3jzj4CFkofimecqHSZ8S0Qvuaa3SA"
CHAT_ID = "189920809"
URL = "https://it.tlscontact.com/by/msq/page.php?pid=news&l=ru"
CHECK_INTERVAL = 300  # –ü—Ä–æ–≤–µ—Ä—è—Ç—å —Ä–∞–∑ –≤ 5 –º–∏–Ω—É—Ç

bot = Bot(token=TOKEN, parse_mode=ParseMode.HTML)
dp = Dispatcher()
latest_news = ""

async def fetch_news():
    global latest_news
    async with aiohttp.ClientSession() as session:
        async with session.get(URL) as response:
            if response.status == 200:
                soup = BeautifulSoup(await response.text(), 'html.parser')
                news_section = soup.find("div", class_="content-container")
                if news_section:
                    news_text = news_section.get_text(strip=True)
                    if news_text != latest_news:
                        latest_news = news_text
                        await bot.send_message(CHAT_ID, f"üì∞ –ù–æ–≤–æ—Å—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∞: {news_text}")
            else:
                logging.warning("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å–æ —Å—Ç—Ä–∞–Ω–∏—Ü—ã")

async def scheduled_checker():
    while True:
        await fetch_news()
        await asyncio.sleep(CHECK_INTERVAL)

@dp.message(Command("start"))
async def start_handler(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –Ω–æ–≤–æ—Å—Ç–µ–π –≤–∏–∑–æ–≤–æ–≥–æ —Ü–µ–Ω—Ç—Ä–∞. –Ø —Å–æ–æ–±—â—É —Ç–µ–±–µ, –∫–æ–≥–¥–∞ –ø–æ—è–≤—è—Ç—Å—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.")

async def main():
    asyncio.create_task(scheduled_checker())
    await dp.start_polling(bot)

if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO)
    asyncio.run(main())
